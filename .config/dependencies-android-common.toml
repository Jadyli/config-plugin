[versions]
# build config
compileSdk = "34"
java-major = "11"
java = "11"
# billing
google-billing = "4.1.0"
# plugin
# https://maven.google.com/web/index.html?q=build#com.android.tools.build:gradle
android-plugin = "7.4.2"
android-tools-common = "30.0.2"
android-plugin-old = "4.1.1"
bugly = "2.2.1"
spotless = "6.23.3"
ktlint = "11.0.0"
dependencies-update = "0.42.0"
booster = "4.13.0"
gradle-publish = "1.2.1"
# androidx
androidx-appcompat = "1.6.1"
androidx-annotation = "1.6.0"
androidx-lifecycle-common = "2.6.1"
androidx-core = "1.10.1"
androidx-collection = "1.2.0"
androidx-fragment = "1.6.0"
androidx-room = "2.5.2"
androidx-hilt-compose = "1.0.0"
androidx-cardview = "1.0.0"
androidx-recyclerview = "1.2.1"
androidx-swiperefreshlayout = "1.1.0"
androidx-viewpager = "1.1.0-alpha01"
androidx-viewpager2 = "1.1.0-beta01"
androidx-transition-ktx = "1.4.1"
androidx-media2 = "1.2.1"
androidx-media3 = "1.1.0-rc01"
androidx-multidex = "2.0.1"
androidx-exifinterface = "1.3.6"
androidx-localbroadcastmanager = "1.1.0"
androidx-legacy-support-core-utils = "1.0.0"
androidx-sqlite = "2.3.1"
exoplayer = "2.19.1"
# ui
androidx-constraintlayout = "2.1.4"
material = "1.9.0"
# other official library
hilt = "2.43.2"
# test
junit = "4.13.2"
androidx-test = "1.5.0"
androidx-test-ext = "1.1.5"
androidx-test-espresso = "3.5.1"
mockk = "1.11.0"
kakao = "3.1.0"
powermock = "2.0.9"
robolectric = "4.8.2"
truth = "1.1.3"
bcprov-jdk15on = "1.70"
awaitility = "4.2.0"
# third party
bugly-upgrade = "1.6.1"
mmkv = "1.2.14"
hilt-compose-navigation-factory = "1.2.0"
coil = "2.2.1"
guava = "31.1-android"
rxandroid = "2.1.1"
fastjson = "1.2.83"
okio = "3.2.0"
commons-io = "2.11.0"
retrofit = "2.8.1"
retrofit-converter-fastjson = "1.2"
okhttp = "4.10.0"
glide = "4.16.0"
glide-transformations = "4.3.0"
svgaplayer = "2.6.1"
glide-compose = "1.0.0-alpha.5"
utilcode = "1.30.7"
expandabletextview = "0.1.4"
switchbutton = "2.1.0"
flycoTabLayout = "3.0.0"
android-gif-drawable = "1.2.9"
markdown = "1.0.5"
wheelpicker = "1.1.2"
magicindicator = "1.7.0"
roundedimageview = "2.3.0"
recyclerview-adapter-helper = "3.0.14"
sentry = "6.4.1"
ormlite-android = "6.1"
okdownload = "1.0.7"
tinypinyin = "2.0.3"
tray = "0.12.0"
rxpermission = "0.11"
tbssdk = "44286"
tinker = "1.9.14.25.3"
bolts = "1.4.0"
epoxy = "5.1.3"
mavericks = "3.0.6"
debug-db = "1.0.3"
leakcanary = "2.12"
stetho = "1.6.0"
codelocator = "2.0.0"
koom = "2.2.1"
javassist = "3.29.2-GA"
auto-service = "1.0.1"
lint-api = "31.0.0"
lint-checks = "31.0.0"
database-sqlcipher = "4.5.2"
checker-qual = "3.13.0"
bitmap-monitor = "1.1.0"
disklrucache = "2.0.2"
gson = "2.10"
zstd-jni = "1.5.5-5"

[libraries]
# androidx
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle-common" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle-common" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle-common" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle-common" }
androidx-lifecycle-reactivestreams-ktx = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "androidx-lifecycle-common" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidx-lifecycle-common" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidx-lifecycle-common" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-collection-ktx = { module = "androidx.collection:collection-ktx", version.ref = "androidx-collection" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "androidx-cardview" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidx-swiperefreshlayout" }
androidx-viewpager = { module = "androidx.viewpager:viewpager", version.ref = "androidx-viewpager" }
androidx-viewpager2 = { module = "androidx.viewpager2:viewpager2", version.ref = "androidx-viewpager2" }
androidx-transition-ktx = { module = "androidx.transition:transition-ktx", version.ref = "androidx-transition-ktx" }
androidx-media2 = { module = "androidx.media2:media2-session", version.ref = "androidx-media2" }
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "androidx-media3" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "androidx-media3" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "androidx-media3" }
androidx-media3-datasource-cronet = { module = "androidx.media3:media3-datasource-cronet", version.ref = "androidx-media3" }
androidx-media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "androidx-media3" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "androidx-multidex" }
androidx-exifinterface = { module = "androidx.exifinterface:exifinterface", version.ref = "androidx-exifinterface" }
androidx-localbroadcastmanager = { module = "androidx.localbroadcastmanager:localbroadcastmanager", version.ref = "androidx-localbroadcastmanager" }
androidx-legacy-support-core-utils = { module = "androidx.legacy:legacy-support-core-utils", version.ref = "androidx-legacy-support-core-utils" }
androidx-sqlite = { module = "androidx.sqlite:sqlite", version.ref = "androidx-sqlite" }
# ExoPlayer
exoplayer-core = { module = "com.google.android.exoplayer:exoplayer-core", version.ref = "exoplayer" }
exoplayer-ui = { module = "com.google.android.exoplayer:exoplayer-ui", version.ref = "exoplayer" }
exoplayer-extension-mediasession = { module = "com.google.android.exoplayer:extension-mediasession", version.ref = "exoplayer" }
exoplayer-extension-cronet = { module = "com.google.android.exoplayer:extension-cronet", version.ref = "exoplayer" }
# ui
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
material = { module = "com.google.android.material:material", version.ref = "material" }
# billing
google-billing = { module = "com.android.billingclient:billing-ktx", version.ref = "google-billing" }
# plugin dependencies
plugin-source-android = { module = "com.android.tools.build:gradle", version.ref = "android-plugin" }
plugin-source-android-common = { module = "com.android.tools:common", version.ref = "android-tools-common" }
plugin-source-android-ddmlib = { module = "com.android.tools.ddms:ddmlib", version.ref = "android-tools-common" }
plugin-source-android-old = { module = "com.android.tools.build:gradle", version.ref = "android-plugin-old" }
plugin-source-spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
booster-api = { module = "com.didiglobal.booster:booster-api", version.ref = "booster" }
booster-transform-asm = { module = "com.didiglobal.booster:booster-transform-asm", version.ref = "booster" }
tinker-patch-lib = { module = "com.tencent.tinker:tinker-patch-lib", version.ref = "tinker" }
tinker-patch-gradle-plugin = { module = "com.tencent.tinker:tinker-patch-gradle-plugin", version.ref = "tinker" }
auto-service = { module = "com.google.auto.service:auto-service", version.ref = "auto-service" }
# hilt
hilt-runtime = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidx-hilt-compose" }
hilt-compose-navigation-factory = { module = "net.lachlanmckee:hilt-compose-navigation-factory", version.ref = "hilt-compose-navigation-factory" }
hilt-compose-navigation-factory-compiler = { module = "net.lachlanmckee:hilt-compose-navigation-factory-compiler", version.ref = "hilt-compose-navigation-factory" }
# test
junit = { module = "junit:junit", version.ref = "junit" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test" }
androidx-fragment-testing = { module = "androidx.fragment:fragment-testing", version.ref = "androidx-fragment" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "androidx-test-espresso" }
espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "androidx-test-espresso" }
androidx-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx-test" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
hilt-androidTesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
kakao = { module = "io.github.kakaocup:kakao", version.ref = "kakao" }
powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermock" }
powermock-module-junit4-rule = { module = "org.powermock:powermock-module-junit4-rule", version.ref = "powermock" }
powermock-api-mockito = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermock" }
powermock-classloading-xstream = { module = "org.powermock:powermock-classloading-xstream", version.ref = "powermock" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
robolectric-multidex = { module = "org.robolectric:shadows-multidex", version.ref = "robolectric" }
robolectric-supportv4 = { module = "org.robolectric:shadows-supportv4", version.ref = "robolectric" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
bcprov-jdk15on = { module = "org.bouncycastle:bcprov-jdk15on", version.ref = "bcprov-jdk15on" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
# third party
bugly-upgrade = { module = "com.tencent.bugly:crashreport_upgrade", version.ref = "bugly-upgrade" }
mmkv = { module = "com.tencent:mmkv-static", version.ref = "mmkv" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
rxandroid = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxandroid" }
fastjson = { module = "com.alibaba:fastjson", version.ref = "fastjson" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-adapter-rxjava = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-converter-fastjson = { module = "com.github.BaronZ88:Retrofit2-FastJson-Converter", version.ref = "retrofit-converter-fastjson" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
glide-ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }
glide-transformations = { module = "jp.wasabeef:glide-transformations", version.ref = "glide-transformations" }
glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "glide-compose" }
glide-okhttp3-integration = { module = "com.github.bumptech.glide:okhttp3-integration", version.ref = "glide" }
svgaplayer = { module = "com.github.svga:SVGAPlayer-Android", version.ref = "svgaplayer" }
utilcode = { module = "com.blankj:utilcode", version.ref = "utilcode" }
expandabletextview = { module = "com.ms-square:expandableTextView", version.ref = "expandabletextview" }
switchbutton = { module = "com.kyleduo.switchbutton:library", version.ref = "switchbutton" }
flycoTabLayout = { module = "io.github.h07000223:flycoTabLayout", version.ref = "flycoTabLayout" }
android-gif-drawable = { module = "pl.droidsonroids.gif:android-gif-drawable", version.ref = "android-gif-drawable" }
markdown = { module = "com.zzhoujay.markdown:markdown", version.ref = "markdown" }
disklrucache = { module = "com.jakewharton:disklrucache", version.ref = "disklrucache" }
wheelpicker = { module = "cn.aigestudio.wheelpicker:WheelPicker", version.ref = "wheelpicker" }
magicindicator = { module = "com.github.hackware1993:MagicIndicator", version.ref = "magicindicator" }
roundedimageview = { module = "com.makeramen:roundedimageview", version.ref = "roundedimageview" }
recyclerview-adapter-helper = { module = "io.github.cymchad:BaseRecyclerViewAdapterHelper", version.ref = "recyclerview-adapter-helper" }
sentry-android = { module = "io.sentry:sentry-android", version.ref = "sentry" }
sentry-android-fragment = { module = "io.sentry:sentry-android-fragment", version.ref = "sentry" }
sentry-android-okhttp = { module = "io.sentry:sentry-android-okhttp", version.ref = "sentry" }
ormlite-android = { module = "com.j256.ormlite:ormlite-android", version.ref = "ormlite-android" }
okdownload-okhttp = { module = "com.liulishuo.okdownload:okhttp", version.ref = "okdownload" }
okdownload-sqlite = { module = "com.liulishuo.okdownload:sqlite", version.ref = "okdownload" }
tinypinyin = { module = "com.github.promeg:tinypinyin", version.ref = "tinypinyin" }
tinypinyin-lexicons-android-cncity = { module = "com.github.promeg:tinypinyin-lexicons-android-cncity", version.ref = "tinypinyin" }
tray = { module = "net.grandcentrix.tray:tray", version.ref = "tray" }
rxpermission = { module = "com.github.tbruyelle:rxpermissions", version.ref = "rxpermission" }
tbssdk = { module = "com.tencent.tbs:tbssdk", version.ref = "tbssdk" }
tinker-android-lib = { module = "com.tencent.tinker:tinker-android-lib", version.ref = "tinker" }
tinker-android-anno = { module = "com.tencent.tinker:tinker-android-anno", version.ref = "tinker" }
tinker-no-op = { module = "com.tencent.tinker:tinker-android-lib-no-op", version.ref = "tinker" }
bolts-tasks = { module = "com.parse.bolts:bolts-tasks", version.ref = "bolts" }
epoxy = { module = "com.airbnb.android:epoxy", version.ref = "epoxy" }
epoxy-processor = { module = "com.airbnb.android:epoxy-processor", version.ref = "epoxy" }
mavericks = { module = "com.airbnb.android:mavericks", version.ref = "mavericks" }
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
stetho = { module = "com.facebook.stetho:stetho", version.ref = "stetho" }
stetho-okhttp3 = { module = "com.facebook.stetho:stetho-okhttp3", version.ref = "stetho" }
codelocator = { module = "com.bytedance.tools.codelocator:codelocator-core", version.ref = "codelocator" }
koom-leak-java = { module = "com.kuaishou.koom:koom-java-leak-static", version.ref = "koom" }
koom-leak-native = { module = "com.kuaishou.koom:koom-native-leak-static", version.ref = "koom" }
koom-leak-thread = { module = "com.kuaishou.koom:koom-thread-leak-static", version.ref = "koom" }
koom-xhook = { module = "com.kuaishou.koom:xhook-static", version.ref = "koom" }
javassist = { module = "org.javassist:javassist", version.ref = "javassist" }
lint-api = { module = "com.android.tools.lint:lint-api", version.ref = "lint-api" }
lint-checks = { module = "com.android.tools.lint:lint-checks", version.ref = "lint-checks" }
database-sqlcipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "database-sqlcipher" }
checker-qual = { module = "org.checkerframework:checker-qual", version.ref = "checker-qual" }
bitmap-monitor = { module = "io.github.shixinzhang:android-bitmap-monitor", version.ref = "bitmap-monitor" }
bitmap-monitor-no-op = { module = "io.github.shixinzhang:android-bitmap-monitor-no-op", version.ref = "bitmap-monitor" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
zstd-jni = { module = "com.github.luben:zstd-jni", version.ref = "zstd-jni" }

[plugins]
android-application = { id = "com.android.application", version.ref = "android-plugin" }
android-library = { id = "com.android.library", version.ref = "android-plugin" }
java-library = { id = "org.gradle.java-library" }
bugly = { id = "bugly", version.ref = "bugly" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
dependencies-update = { id = "com.github.ben-manes.versions", version = "dependencies-update" }
hilt-android = { id = "dagger.hilt.android.plugin", version.ref = "hilt" }
tinker = { id = "com.tencent.tinker.patch", version.ref = "tinker" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
booster = { id = "com.didiglobal.booster", version.ref = "booster" }
gradle-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-publish" }

[bundles]
hilt-navigation = ["hilt-navigation-compose", "hilt-compose-navigation-factory"]
hilt-compiler = ["hilt-compiler", "hilt-compose-navigation-factory-compiler"]
